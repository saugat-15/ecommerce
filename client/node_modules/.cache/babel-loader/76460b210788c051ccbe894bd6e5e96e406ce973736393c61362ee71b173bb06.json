{"ast":null,"code":"var _jsxFileName = \"D:\\\\final-project\\\\client\\\\src\\\\App.js\";\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Add Products!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 6\n  }, this), /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      productName: ''\n    },\n    validate: values => {\n      const errors = {};\n      if (!values.email) {\n        errors.email = 'Required';\n      }\n      return errors;\n    },\n    onSubmit: (values, _ref) => {\n      let {\n        setSubmitting\n      } = _ref;\n      setTimeout(() => {\n        alert(JSON.stringify(values, null, 2));\n        setSubmitting(false);\n      }, 400);\n    },\n    children: _ref2 => {\n      let {\n        isSubmitting\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          type: \"email\",\n          name: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"email\",\n          component: \"div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          type: \"password\",\n          name: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"password\",\n          component: \"div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isSubmitting,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 10\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 6\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 4\n}, this);\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Formik","Form","Field","ErrorMessage","App","productName","values","errors","email","setSubmitting","setTimeout","alert","JSON","stringify","isSubmitting"],"sources":["D:/final-project/client/src/App.js"],"sourcesContent":["import React from 'react';\n import { Formik, Form, Field, ErrorMessage } from 'formik';\n \n const App = () => (\n   <div>\n     <h1>Add Products!</h1>\n     <Formik\n       initialValues={{ productName: '', }}\n       validate={values => {\n         const errors = {};\n         if (!values.email) {\n           errors.email = 'Required';\n         }\n         return errors;\n       }}\n       onSubmit={(values, { setSubmitting }) => {\n         setTimeout(() => {\n           alert(JSON.stringify(values, null, 2));\n           setSubmitting(false);\n         }, 400);\n       }}\n     >\n       {({ isSubmitting }) => (\n         <Form>\n          <label>email</label>\n           <Field type=\"email\" name=\"email\" />\n           <ErrorMessage name=\"email\" component=\"div\" />\n           <Field type=\"password\" name=\"password\" />\n           <ErrorMessage name=\"password\" component=\"div\" />\n           <button type=\"submit\" disabled={isSubmitting}>\n             Submit\n           </button>\n         </Form>\n       )}\n     </Formik>\n   </div>\n );\n \n export default App;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACxB,SAASC,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAEC,YAAY,QAAQ,QAAQ;AAAC;AAE3D,MAAMC,GAAG,GAAG,mBACV;EAAA,wBACE;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAsB,eACtB,QAAC,MAAM;IACL,aAAa,EAAE;MAAEC,WAAW,EAAE;IAAI,CAAE;IACpC,QAAQ,EAAEC,MAAM,IAAI;MAClB,MAAMC,MAAM,GAAG,CAAC,CAAC;MACjB,IAAI,CAACD,MAAM,CAACE,KAAK,EAAE;QACjBD,MAAM,CAACC,KAAK,GAAG,UAAU;MAC3B;MACA,OAAOD,MAAM;IACf,CAAE;IACF,QAAQ,EAAE,CAACD,MAAM,WAAwB;MAAA,IAAtB;QAAEG;MAAc,CAAC;MAClCC,UAAU,CAAC,MAAM;QACfC,KAAK,CAACC,IAAI,CAACC,SAAS,CAACP,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;QACtCG,aAAa,CAAC,KAAK,CAAC;MACtB,CAAC,EAAE,GAAG,CAAC;IACT,CAAE;IAAA,UAED;MAAA,IAAC;QAAEK;MAAa,CAAC;MAAA,oBAChB,QAAC,IAAI;QAAA,wBACJ;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAoB,eACnB,QAAC,KAAK;UAAC,IAAI,EAAC,OAAO;UAAC,IAAI,EAAC;QAAO;UAAA;UAAA;UAAA;QAAA,QAAG,eACnC,QAAC,YAAY;UAAC,IAAI,EAAC,OAAO;UAAC,SAAS,EAAC;QAAK;UAAA;UAAA;UAAA;QAAA,QAAG,eAC7C,QAAC,KAAK;UAAC,IAAI,EAAC,UAAU;UAAC,IAAI,EAAC;QAAU;UAAA;UAAA;UAAA;QAAA,QAAG,eACzC,QAAC,YAAY;UAAC,IAAI,EAAC,UAAU;UAAC,SAAS,EAAC;QAAK;UAAA;UAAA;UAAA;QAAA,QAAG,eAChD;UAAQ,IAAI,EAAC,QAAQ;UAAC,QAAQ,EAAEA,YAAa;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAEpC;MAAA;QAAA;QAAA;QAAA;MAAA,QACJ;IAAA;EACR;IAAA;IAAA;IAAA;EAAA,QACM;AAAA;EAAA;EAAA;EAAA;AAAA,QAEZ;AAAC,KAjCIV,GAAG;AAmCT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}